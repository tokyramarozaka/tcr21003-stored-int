name: CD Compute

on:
  push:
    branches:
      - "preprod"
      - "prod"

  workflow_dispatch:
    inputs:
      env_conf_id:
        required: false
        description: |
          Env conf id.
          Optional, if set then Deployment id must remain unset (as we will create a new Deployment id). If not set, then will retrieve latest conf.
      deployment_id:
        required: false
        description: |
          Deployment id.
          Optional, if set then Env conf id must remain unset (as we already have an associated Env conf id).
          Mainly used by Poja API: regular users does not have to use it under normal conditions.
jobs:
  initiate-deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write

    env:
      AWS_REGION: eu-west-3

    steps:
      - uses: actions/checkout@v4.1.6

      - name: Update github workflow state
        run: |
          commit_message=$(git log -1 --pretty=%B)
          commit_author=$(git log -1 --pretty=%an)

          app_env_deployment_id_value=${{ env.app_env_deployment_id }}
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            app_env_deployment_id_value="${{ github.event.inputs.deployment_id }}"
          fi
          if [ -z "$app_env_deployment_id_value" ]; then
            app_env_deployment_id_value="null"
          fi

          response=$(curl --fail -X POST "https://api.prod.poja.io/gh-repos/${{ github.repository }}/github-workflow-state" \
            -H "Authorization: AppBearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
                  --arg app_env_deployment_id "$app_env_deployment_id_value" \
                  --arg workflow_run_id "${{ github.run_id }}" \
                  --arg workflow_run_attempt "${{ github.run_attempt }}" \
                  --arg commit_sha "${{ github.sha }}" \
                  --arg commit_message "$commit_message" \
                  --arg commit_author "$commit_author" \
                  --arg status "WORKFLOW_RUNNING" \
                  --arg environment_type "$(echo "${{ github.ref_name }}" | tr '[:lower:]' '[:upper:]')" \
                  '{
                    app_env_deployment_id: ($app_env_deployment_id | if . == "null" then null else . end),
                    commit_sha: $commit_sha,
                    workflow_run_id: $workflow_run_id,
                    workflow_run_attempt: $workflow_run_attempt,
                    commit_message: $commit_message,
                    commit_author_name: $commit_author,
                    status: $status,
                    environment_type: $environment_type
                  }')")

          echo "app_env_deployment_id=$(echo $response | jq -r '.app_env_deployment_id')" >> $GITHUB_ENV
          echo $response
      - uses: actions/setup-java@v4.2.1
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Prepare build
        run: |
          chmod +x ./gradlew
          chmod +x .shell/publish_gen_to_maven_local.sh
          response=$(curl --fail -X GET "https://api.prod.poja.io/gh-repos/${{ github.repository }}/upload-build-uri?environment_type=$(echo "${{ github.ref_name }}" | tr '[:lower:]' '[:upper:]')" -H "Authorization: AppBearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/json")
          echo "upload_build_file_uri=$(echo $response | jq -r '.uri')" >> $GITHUB_ENV
          echo "to_upload_filename=$(echo $response | jq -r '.filename')" >> $GITHUB_ENV
          curl --fail -X GET -o template.yml "$(echo $response | jq -r '.build_template_file_uri')"

      - name: Build project
        run: sam build

      - name: Prepare Poja deployment
        run: |
          shopt -s globstar
          zip -r9 ${{ env.to_upload_filename }} .aws-sam
          shopt -u globstar
          curl --fail -X PUT -H "Content-Type: application/zip" -H "x-amz-tagging: temporary=true" -T ${{ env.to_upload_filename }} "${{ env.upload_build_file_uri }}"

      - name: Get current time
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Create UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1
        with:
          name: ${{ steps.current-time.outputs.time }}

      - name: Trigger Poja deployment
        id: trigger-deployment
        run: |
          app_env_deployment_id="${{ env.app_env_deployment_id }}"

          input_conf_id="${{ github.event.inputs.env_conf_id }}"

          TAG_NAME="null"
          TAG_MESSAGE="null"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "$input_conf_id" ]]; then
            TAG_NAME="poja-depl-${app_env_deployment_id}"
            TAG_MESSAGE="poja: deployment ID: ${app_env_deployment_id}"            
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "TAG_MESSAGE=$TAG_MESSAGE" >> $GITHUB_ENV

          if [ -z "$input_conf_id" ]; then
            input_conf_id="null"
          fi
          response=$(curl --fail -X PUT "https://api.prod.poja.io/gh-repos/${{ github.repository }}/env-deploys?environment_type=$(echo "${{ github.ref_name }}" | tr '[:lower:]' '[:upper:]')" \
            -H "Authorization: AppBearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg env_depl_conf_id "$input_conf_id" \
              --arg formatted_bucket_key "${{ env.to_upload_filename }}" \
              --arg id "${{ steps.generate-uuid.outputs.uuid }}" \
              --arg commit_sha "${{ github.sha }}" \
              --arg app_env_deployment_id "${{ env.app_env_deployment_id }}" \
              --arg environment_type "$(echo "${{ github.ref_name }}" | tr '[:lower:]' '[:upper:]')" \
              --arg tag_name "$TAG_NAME" \
              --arg tag_message "$TAG_MESSAGE" \
              '{
                env_depl_conf_id: ($env_depl_conf_id | if . == "null" then null else . end),
                formatted_bucket_key: $formatted_bucket_key,
                id: $id,
                commit_sha: $commit_sha,
                app_env_deployment_id: $app_env_deployment_id,
                environment_type: $environment_type,
                tag_name: ($tag_name | if . == "null" then null else . end),
                tag_message: ($tag_message | if . == "null" then null else . end)
              }')")
          echo $response
      
      - name: Tag commit if deployment with custom conf succeeded
        if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.env_conf_id != '' ) && env.TAG_NAME != 'null' && env.TAG_MESSAGE != 'null' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
          TAG_MESSAGE: ${{ env.TAG_MESSAGE }}
        run: |
          git config user.name "poja[bot]"
          git config user.email "bot@poja.io"
          git tag -a "$TAG_NAME" -m "$TAG_MESSAGE"
          git push origin "$TAG_NAME"
          
      - name: Update github state if step fails
        if: failure()
        run: |
          commit_message=$(git log -1 --pretty=%B)
          commit_author=$(git log -1 --pretty=%an)

          app_env_deployment_id_value=${{ env.app_env_deployment_id }}
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            app_env_deployment_id_value="${{ github.event.inputs.deployment_id }}"
          fi
          if [ -z "$app_env_deployment_id_value" ]; then
            app_env_deployment_id_value=null
          fi

          response=$(curl --fail -X POST "https://api.prod.poja.io/gh-repos/${{ github.repository }}/github-workflow-state" \
            -H "Authorization: AppBearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
                  --arg app_env_deployment_id "$app_env_deployment_id_value" \
                  --arg workflow_run_id "${{ github.run_id }}" \
                  --arg workflow_run_attempt "${{ github.run_attempt }}" \
                  --arg commit_sha "${{ github.sha }}" \
                  --arg commit_message "$commit_message" \
                  --arg commit_author "$commit_author" \
                  --arg status "WORKFLOW_FAILED" \
                  --arg environment_type "$(echo "${{ github.ref_name }}" | tr '[:lower:]' '[:upper:]')" \
                  '{
                    app_env_deployment_id: ($app_env_deployment_id | if . == "null" then null else . end),
                    commit_sha: $commit_sha,
                    workflow_run_id: $workflow_run_id,
                    workflow_run_attempt: $workflow_run_attempt,
                    commit_message: $commit_message,
                    commit_author_name: $commit_author,
                    status: $status,
                    environment_type: $environment_type
                }')")
          echo $response 
